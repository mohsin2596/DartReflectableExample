// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'main.dart' as prefix0;

// ignore_for_file: unnecessary_const
// ignore_for_file: prefer_collection_literals
// ignore_for_file: prefer_adjacent_string_concatenation

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflect(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'SampleClass',
            r'.SampleClass',
            7,
            0,
            const prefix0.Reflect(),
            const <int>[0, 1, 2],
            const <int>[3, 4, 5, 6, 7, 0, 1],
            const <int>[],
            -1,
            {},
            {},
            {r'': (b) => () => b ? prefix0.SampleClass() : null},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.reflect],
            null)
      ],
      <m.DeclarationMirror>[
        r.MethodMirrorImpl(
            r'methodA',
            262146,
            0,
            null,
            -1,
            -1,
            null,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix0.Methods.a()]),
        r.MethodMirrorImpl(
            r'methodB',
            262146,
            0,
            null,
            -1,
            -1,
            null,
            const <int>[],
            const prefix0.Reflect(),
            const <Object>[const prefix0.Methods.b()]),
        r.MethodMirrorImpl(r'', 0, 0, -1, -1, -1, null, const <int>[],
            const prefix0.Reflect(), const []),
        r.MethodMirrorImpl(r'==', 131074, null, -1, -1, -1, null,
            const <int>[0], const prefix0.Reflect(), const []),
        r.MethodMirrorImpl(r'toString', 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflect(), const []),
        r.MethodMirrorImpl(r'noSuchMethod', 65538, null, null, -1, -1, null,
            const <int>[1], const prefix0.Reflect(), const []),
        r.MethodMirrorImpl(r'hashCode', 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflect(), const []),
        r.MethodMirrorImpl(r'runtimeType', 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.Reflect(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'other', 16390, 3, const prefix0.Reflect(), null,
            -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'invocation', 32774, 5, const prefix0.Reflect(),
            -1, -1, -1, null, const [], null, null)
      ],
      <Type>[prefix0.SampleClass],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'methodA': (dynamic instance) => instance.methodA,
        r'methodB': (dynamic instance) => instance.methodB
      },
      {},
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
